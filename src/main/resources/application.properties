# postgres://xodrfkqvcykfrh:b2cc886b03c5f0304541ae5fea59be1165371db35a87cb1cb061acb0fbe631dc@ec2-107-20-155-148.compute-1.amazonaws.com:5432/d6vj07ol9qre9t

## Spring view resolver set up
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:postgresql://ec2-107-20-155-148.compute-1.amazonaws.com:5432/d6vj07ol9qre9t
spring.datasource.username = xodrfkqvcykfrh
spring.datasource.password = b2cc886b03c5f0304541ae5fea59be1165371db35a87cb1cb061acb0fbe631dc
spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
## Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

##mysql://b54ddfb8c54894:bde36448@us-cdbr-iron-east-05.cleardb.net/heroku_994e026d89fad3e?reconnect=true
#
### Spring view resolver set up
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp
#
### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://us-cdbr-iron-east-05.cleardb.net:3306/heroku_994e026d89fad3e?useSSL=false
#spring.datasource.username = b54ddfb8c54894
#spring.datasource.password = bde36448
#
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update